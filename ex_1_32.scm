(define (accumulate combiner null-value term a next b)
    (if (> a b)
        null-value
        (accumulate combiner (combiner (term a) null-value) term (next a) next b)))
;-----
(define (p-com a b)
    (* a b))
(define (p-term a)
    (/ (* a (+ a 2)) (square (+ a 1)))
)
(define (p-next a)
    (+ a 2)
)
(define (product n)
    (exact->inexact(accumulate p-com 1 p-term 2 p-next n))
)
(define (pi n)
    (* 4 (product n))
)
