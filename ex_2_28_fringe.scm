(define (fringe tree)
    (define (deep-leaf-iter t leafs)
        (if (list? t)
            (if (> (length t) 0)
                (deep-leaf-iter (car t) (deep-leaf-iter (cdr t) leafs))
                leafs)
            (if (null? leafs)
                (list t)
                (cons t leafs))
        )
    )
    (deep-leaf-iter tree `())
)

(define x (list (list 1 2) (list 3 4) (list 5 6 7 8 (list 9 10))))
